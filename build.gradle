buildscript {
    ext {
        cleanArchitectureVersion = '3.20.1'
        springBootVersion = '3.3.4'
        sonarVersion = '5.1.0.4882'
        jacocoVersion = '0.8.12'
        pitestVersion = '1.15.0'
        lombokVersion = '1.18.34'
    }
}

plugins {
    id 'co.com.bancolombia.cleanArchitecture' version "${cleanArchitectureVersion}"
    //id 'org.springframework.boot' version "${springBootVersion}" apply false
    id 'org.sonarqube' version "${sonarVersion}"
    id 'jacoco'
    id 'info.solidsoft.pitest' version "${pitestVersion}" apply false
    id 'org.springframework.boot' version '3.3.6'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'java'
}

sonar {
    def modules = subprojects.projectDir.collect {
        "${it.toString().replace(project.projectDir.toString() + "/", "")}" }
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.modules", "${modules.join(',')}"
        property "sonar.sources", "src,deployment,settings.gradle,main.gradle,build.gradle,${modules.collect { "${it}/build.gradle" }.join(',')}"
        property "sonar.exclusions","**/MainApplication.java"
        property "sonar.test", "src/test"
        property "sonar.java.binaries", ""
        property "sonar.junit.reportsPath", ""
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacocoMergedReport/jacocoMergedReport.xml"
        property "sonar.pitest.reportPaths", "build/reports/pitest/mutations.xml"
        property "sonar.externalIssuesReportPaths", "build/issues.json"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter'
}

apply from: './main.gradle'
